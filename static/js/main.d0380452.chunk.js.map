{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0380452.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border: 1px solid lightblue;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n    width: 100%;\r\n  }\r\n\r\n  img {\r\n    max-height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 20px 20px 0 0;\r\n  }\r\n\r\n  div {\r\n    font-family: Arial, Helvetice, sans-serif;\r\n  }\r\n`;\r\n","import Button from \"@material-ui/core/Button\";\r\n// types\r\nimport { CartItemType } from \"../App\";\r\n// styles\r\nimport { Wrapper } from \"./Item.styles\";\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n};\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\r\n  <Wrapper>\r\n    <img src={item.image} alt={item.title} />\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <p>{item.description}</p>\r\n      <h3>${item.price}</h3>\r\n      <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\r\n    </div>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-bottom: 1px solid lightblue;\r\n  padding-bottom: 20px;\r\n\r\n  div {\r\n    flex: 1;\r\n  }\r\n\r\n  .information,\r\n  .button {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  img {\r\n    max-width: 80px;\r\n    object-fit: cover;\r\n    margin-left: 40px;\r\n  }\r\n`;\r\n","import { Button } from \"@material-ui/core\";\r\n\r\n// types\r\nimport { CartItemType } from \"../App\";\r\nimport Item from \"../Item/Item\";\r\n// styles\r\nimport { Wrapper } from \"./CartItem.styles\";\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\r\n  <Wrapper>\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <div className=\"information\">\r\n        <p>Price: ${item.price}</p>\r\n        <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\r\n      </div>\r\n      <div className=\"button\">\r\n        <Button\r\n          size=\"small\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={() => removeFromCart(item.id)}\r\n        >\r\n          -\r\n        </Button>\r\n        <p>{item.amount}</p>\r\n        <Button\r\n          size=\"small\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={() => addToCart(item)}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n    <img src={item.image} alt={item.title} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default CartItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetice, sans-serif;\r\n  width: 500px;\r\n  padding: 20px;\r\n`;\r\n","import CartItem from \"../CartItem/CartItem\";\r\n// styles\r\nimport { Wrapper } from \"./Cart.styles\";\r\n// types\r\nimport { CartItemType } from \"../App\";\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\r\n  const calculateTotal = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? <p>No Items in cart</p> : null}\r\n      {cartItems.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import styled from \"styled-components\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 0 200px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right: 20px;\r\n  top: 20px;\r\n`;\r\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n// components\nimport Item from \"./Item/Item\";\nimport Cart from \"./Cart/Cart\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\n// styles\nimport { Wrapper, StyledButton } from \"./App.styles\";\n// types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"products\",\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prev) => {\n      // 1. is the item already added in he cart?\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      // first time the item is added\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((ack, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return ack;\n          return [...ack, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}